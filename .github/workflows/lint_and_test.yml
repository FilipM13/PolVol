name: Check MyPy and Black Formatting for Python and Formatting for Js
on: [push, workflow_dispatch, workflow_call]
jobs:
  Pyhton:
    name: Check Python code typing and formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: manage dependencies
        run: |
          cd backend
          python -m pip install -r requirements.txt
          python -m pip install -r requirements_dev.txt
      - name: check black and mypy
        run: |
          python -m black --check backend/src
          python -m mypy backend/src

  JS:
    name: Check JS code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 22
      - name: Install Node.js dependencies
        run: |
          cd frontend
          npm ci
          npm install prettier
          npx prettier --check .

  # test-unit:
  #   name: run unit tests
  #   needs: Python
  #   strategy:
  #     matrix:
  #       py_ver: ['3.9', '3.10', '3.11', '3.12', '3.13']
  #       os: [ubuntu-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/manage_dependencies
  #       with:
  #         python-version: ${{ matrix.py_ver }}
  #     - name: test code
  #       id: test
  #       run: python -m pytest tests/unit_tests
  #     - name: test artifacts
  #       if: failure() && steps.test.outcome == 'failure'
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: log-unit-tests
  #         path: logs-unit

  # test-module:
  #   name: run module tests
  #   needs: JS
  #   strategy:
  #     matrix:
  #       py_ver: ['3.9', '3.10', '3.11', '3.13']
  #       os: [ubuntu-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/manage_dependencies
  #       with:
  #         python-version: ${{ matrix.py_ver }}
  #     - name: test code
  #       id: test
  #       run: python -m pytest tests/module_tests
  #     - name: test artifacts
  #       if: failure() && steps.test.outcome == 'failure'
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: log-module-tests
  #         path: logs-module
